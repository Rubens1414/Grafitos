/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package intento_2_grafo;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.Ellipse2D;

/**
 *
 * @author Rubens1414
 */
public class vertice extends javax.swing.JPanel implements MouseListener, MouseMotionListener {

    /**
     * Creates new form vertice
     */
    public vertice() {
        initComponents();
        this.addMouseListener(this);
        this.addMouseMotionListener(this);
        setVisible(true);
        //esto ayuda a que no se vea el fondo del panel
        setOpaque(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel(){

        };

        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                formAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        int max = 4;
        int min = 1;
        int range = max - min + 1;
        int rand = (int) (Math.random() * range) + min;
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/"+rand+".png")));
        jLabel2.setText(Interfaz.nombre);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_formAncestorMoved

    //dibuja el "circulo" lo cual no hace aun no se porque 
    public void dibuja(Graphics g) {

        g.setColor(Color.blue);
        g.drawOval(0, 0, 30, 30);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    //metodo de click
    @Override
    public void mouseClicked(MouseEvent e) {
        Point p;
        //si le dieron click al boton de arista cambiara la variable "s" a true
        if (Interfaz.s == true) {
            //me dara la informacion de localicacion del mouse
            p = MouseInfo.getPointerInfo().getLocation();
            //cambio de click
            //primer click:
            if (Interfaz.eligioP) {

                p = this.getLocation();
                Interfaz.x1 = p.x;
                Interfaz.y1 = p.y;
                Interfaz.eligioP = false;
                
            } else {
                //segundo click
                p = this.getLocation();
                Interfaz.x2 = p.x;
                Interfaz.y2 = p.y;
                //De acuerdo a los puntos crea la linea
                Interfaz.pintarlinea(Interfaz.x1, Interfaz.y1, Interfaz.x2, Interfaz.y2);
                Interfaz.eligioP = true;
                //se vuelve la variable en falso para que no cree aristas hasta que vuelva a dar al boton
                Interfaz.s = false;
            }
        }
        //eliminacion de vertice (Problema: elimino un vertices y me elimina todas las lineas) 
        // puede ser por el mismo problema de mover el jframe y se quiten 
        // si la variable o es true por el boton eliminarvertice
        if (Interfaz.o == true) {
           //cuando le de click al panel se eliminara 
            Interfaz.panela.remove(this);
            //actualiza el panel para notar el cambio(este puede ser el problema ya que se actualiza y se quitan las lineas lo mismo ocurre cuando mueves el frame)
            Interfaz.panela.updateUI();
            //comprobacion en consola si esta funcionando el if
            System.out.println("no0o0");
            //vuelve o a falso para que no elimine  hasta que vuelva a dar al boton
            Interfaz.o = false;

        }
    }

    @Override
    public void mousePressed(MouseEvent e) {

    }

    @Override
    public void mouseReleased(MouseEvent e) {

    }

    @Override
    public void mouseEntered(MouseEvent e) {

    }

    @Override
    public void mouseExited(MouseEvent e) {

    }

    @Override
    public void mouseDragged(MouseEvent e) {

    }

    @Override
    public void mouseMoved(MouseEvent e) {

    }
}
